export default class PauseManager {
    #private;
    pause: Deferred;
    pause2: Deferred;
    pause3: Deferred;
    over: Deferred;
    delay: Deferred;
    setDelay(promise: Promise<void>): Promise<void>;
    waitPause(): Promise<void>;
}
declare class Deferred {
    #private;
    get isStarted(): boolean;
    start(): void;
    resolve(): void;
    then(onfulfilled?: ((value: void) => void | PromiseLike<void>) | null, onrejected?: ((reason: any) => never | PromiseLike<never>) | null): Promise<void>;
}
export {};
